#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < (int)(n); i++)

bool second_check(string T, string S) {
  if (T.size() + 1 != S.size())
    return false;
  int insert_point = -1;
  rep (i, T.size()) {
    if (T[i] == S[i])
      continue;
    else {
      insert_point = i;
      break;
    }
  }
  if (insert_point == -1)
    return true;
  for (int i = insert_point; i < T.size(); i++) {
    if (T[i] == S[i + 1])
      continue;
    else
      return false;
  }
  return true;
}

bool third_check(string T, string S) {
  if (S.size() + 1 != T.size())
    return false;
  int insert_point = -1;
  rep (i, S.size()) {
    if (S[i] == T[i])
      continue;
    else {
      insert_point = i;
      break;
    }
  }
  if (insert_point == -1)
    return true;
  for (int i = insert_point; i < S.size(); i++) {
    if (S[i] == T[i + 1])
      continue;
    else
      return false;
  }
  return true;
}

bool forth_check(string T, string S) {
  if (T.size() != S.size())
    return false;
  int change_point = -1;
  rep (i, T.size()) {
    if (T[i] == S[i])
      continue;
    else {
      change_point = i;
      break;
    }
  }
  if (change_point == -1)
    return false;
  for (int i = change_point + 1; i < T.size(); i++) {
    if (T[i] == S[i])
      continue;
    else
      return false;
  }
  return true;
}

int main() {
  int N;
  cin >> N;
  if ((N < 1) || (N > 5 * 10e5))
    exit(1);
  string T;
  cin >> T;
  if ((T.size() < 1) || (T.size() > 5 * 10e5))
    exit(1);

  vector<int> K;
  rep (i, N) {
    string S;
    cin >> S;
    if ((S.size() < 1) || (S.size() > 5 * 10e5))
      exit(1);

    if (T == S) {
      K.push_back(i);
      continue;
    }

    if (second_check(T, S)) {
      K.push_back(i);
      continue;
    }

    if (third_check(T, S)) {
      K.push_back(i);
      continue;
    }

    if (forth_check(T, S)) {
      K.push_back(i);
      continue;
    }
  }
  cout << K.size() << endl;
  rep (i, K.size()) {
    cout << K[i] + 1 << " ";
  }
  cout << endl;
}
